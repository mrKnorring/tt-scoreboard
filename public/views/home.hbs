<!-- public/views/home.hbs -->
<div x-data='state'>
	<div x-data='{ data: {{json user}} }'>

		<header class='flex w-full justify-center items-center relative'>
			<h1 class='text-3xl mt-4 font-bold m-auto'>Inställningar</h1>
			<div class='absolute right-4 bottom-2'>
				<a href='/logout'>Logga ut </a>
			</div>
		</header>
		<h3 class='text-xl text-center'>
			<span>{{user.name}}</span>
			<span class='uppercase'>({{user.username}})</span>
		</h3>

		<main class='p-4 max-w-screen-lg m-auto'>

			{{! SEARCH CLUB }}
			<section>
				<h3 class='text-xl'>Sök klubb</h3>
				<div class='my-2 grid grid-cols-4 gap-4'>
					<div class='col-span-3'>
						<input id='search' name='search' type='text' autocomplete='current-search' class='form-input'
							placeholder='Sök klubb' x-model='search' @keyup.enter='searchClub' />

					</div>
					<div class='col-span-1'>

						<button class='form-btn' @click='searchClub'>Sök</button>
					</div>
				</div>

				<div x-show='open'>
					<template x-if='clubUrl'>
						<img :src='clubUrl' class='max-w-32' />
					</template>
					<template x-if='!clubUrl'>
						<img src='/public/no-logo.png' class='max-w-32' />
					</template>
					<strong x-text='clubName'></strong>
				</div>
			</section>
			<template x-for="court in data.venue.courts">
				<section>
					<h3 class='text-xl' x-text="court.title"></h3>
					<h5>
						<span x-text="court.style.font"></span>
						<span x-text="court.style.bg"></span>
					</h5>
					<table class='w-full my-6 border-collapse border-slate-400'>
						<template x-for="match in court.matches" :key="match.id">
							<tbody>
								<tr>
									<td class='border border-slate-400' rowspan="2">
										<input name='search' type='text' class='form-input' x-model="match.table" />

									</td>
									<td class='border border-slate-400 text-center'>
										<div class='flex justify-center'>
											<img :src="match.homeTeam.image" class='max-w-12' />
										</div>
									</td>
									<td class='border border-slate-400'>
										<input name='homeTeamName' type='text' class='form-input' x-model="match.homeTeam.name" />
									</td>
									<td class='border border-slate-400'>
										<input name='homeTeamScore' type='text' class='form-input' x-model="match.homeTeam.score" />
									</td>
									<td rowspan='2' class='border border-slate-400 px-2'>
										<div class='flex flex-col gap-2'>

											<button class='form-btn' @click="saveMatch(court.courtId, match)">Spara</button>
											<button class='form-btn btn-danger' @click="removeMatch()">Ta bort</button>
										</div>
									</td>
								</tr>
								
								<tr>
									<td class='border border-slate-400'>
										<div class='flex justify-center'>
											<img :src="match.awayTeam.image" class='max-w-12' />
										</div>
									</td>
									<td class='border border-slate-400'>
										<input name='awayTeamName' type='text' class='form-input' x-model="match.awayTeam.name" />

									</td>
									<td class='border border-slate-400'>
										<input name='awayTeamScore' type='text' class='form-input' x-model="match.awayTeam.score" />
									</td>
								</tr> 
							</tbody>
						</template>
					</table>
				</section>
			</template>

			{{! CHANGE PASSWORD }}
			<section>
				<h3 class='text-xl cursor-pointer' @click='passwordExpanded = !passwordExpanded'>
					Ändra lösenord
					<template x-if='!passwordExpanded'>
						<span class='ml-1'>&#9660;</span>
					</template>
					<template x-if='passwordExpanded'>
						<span class='ml-1'>&#9650;</span>
					</template>
				</h3>
				<div x-show='passwordExpanded' x-collapse>
					<div class='my-2 grid grid-cols-7 gap-4'>

						<div class='col-span-3'>
							<input id='newPassword' name='newPassword' type='password' class='form-input'
								placeholder='Nytt lösenord' x-model='newPassword' x-model='newPassword' />

						</div>
						<div class='col-span-3'>
							<input id='confirmPassword' name='confirmPassword' type='password' class='form-input'
								placeholder='Bekräfta lösenord' x-model='confirmPassword' x-model='confirmPassword' />
						</div>
						<div class='col-span-1'>
							<button class='form-btn' @click='changePassword' x-bind:disabled='disableNewPasswordBtn'>
								Spara
							</button>
						</div>
					</div>
					<template x-if='passwordMessage'>
						<p class='mt-2 ml-2 text-sm text-gray-500' x-text='passwordMessage'></p>
					</template>
				</div>
			</section>
		</main>
	</div>

</div>

<script>
	// FUNCTIONS
	const fetchClub = async (search) => {
		const url = 'https://api-pingiskalk-wwr1.onrender.com/clubs/search'
		const response = await fetch(url, {
			method: 'POST',
			headers: { 'Content-Type': 'application/json' },
			body: JSON.stringify({ search }),
		})
		return await response.json()
	}


	const postChangePassword = async (newPassword, confirmPassword) => {
		const url = '/users/change-password'
		const response = await fetch(url, {
			method: 'POST',
			headers: { 'Content-Type': 'application/json' },
			body: JSON.stringify({ newPassword, confirmPassword }),
		})
		return await response.json()
	}

	const postMatch = async (courtId, match) => {
		const url = '/users/match'
		const response = await fetch(url, {
			method: 'POST',
			headers: { 'Content-Type': 'application/json' },
			body: JSON.stringify({ courtId, match }),
		})
		return await response.json()
	}

	//	STATE
	document.addEventListener('alpine:init', () => {
		Alpine.data('state', () => ({
			open: false,
			clubUrl: '',
			clubName: '',
			search: '',
			newPassword: '',
			confirmPassword: '',
			passwordMessage: '',
			passwordExpanded: false,

			toggle() {
				this.open = !this.open
			},
			async searchClub() {
				this.open = false
				const club = await fetchClub(this.search)
				if (club) {
					if (club.image) {

						this.clubUrl = club.image.replaceAll('{size}', '300')
					} else {
						this.clubUrl = ''
					}
					this.clubName = club.alias
					this.open = true
				}
			},
			disableNewPasswordBtn() {
				return !(this.newPassword && this.newPassword === this.confirmPassword)
			},
			async changePassword() {
				this.passwordMessage = ''
				const res = await postChangePassword(this.newPassword, this.confirmPassword)
				if (res instanceof Object) {
					this.passwordMessage = 'Lösenordet sparat'
					this.confirmPassword = ''
					this.newPassword = ''
				} else {
					this.passwordMessage = res.message
				}
			},
			async saveMatch(courtId, match) {
				const a = await postMatch(courtId, match)
				console.log(a)
			},
			async removeMatch() {

			},
		}))
	})
</script>